CodePen link: 

Questions:
    1. What is Semantic HTML?
        Semantic HTML is the correct use of HTML to reinforce the meaning of content on a web page, rather than merely define its appearance. 
    2. What is HTML used for? 
        To structure a webpage and its content.
    3. What is an attribute and where do we put it? 
       Attributes add meaning to the element. They go in the opening tag.
    4. What is the h1 tag used for? How many times should I use it on a page?
        Header 1 (the biggest header) should only be used once per page.
    5. Name two tags that have required attributes
        <img> and <a>
    6. What do we put in the head of our HTML document?
        Title and links (stylesheet, fonts, other pages)
    7. What is an id?
       Id attributes are used to point to a specific style declaration in a style sheet. It also provides a special ID to the HTML element.
    8. What elements can I add an id to?
        <section> <div> <
    9. How many times can I use the same id on a page? 
        Once
    10. What is a class? 
        Specifies one or more class names for an element.
    11. What elements can I add a class to? 
        Unlimited.
    12. How many times can I use the same class on a page? 
        Unlimited.
    13. How do I get my link to open in a new tab?
        target="_blank"
    14. What is the alt attribute in the image tag used for? 
        To provide additional info for screen-readers about the image.
    15. How do I reference an id?
        "#" in CSS
    16. What is the difference between a section and a div?
        sections are semantic, divs are generic.
    17. What is CSS used for?
        To style a webpage. 
    18. How to we select an element? Example - every h2 on the page
        h2 {

        }
    19. What is the difference between a class and an id? - Give me an example of when I might use each one
        Class (<p class="content") can be used more than once on a single page.
        ID (<div id="about-container) should only be used once per page.
    20. How do we select classes in CSS?
     .class {

     }
    21. How do we select a p element with a single class of “human””?
        .human {

        }
    22. What is a parent child selector? When would this be useful? 
        Parent/child selector selects all elements that are a direct child of the specified element. Useful when you want to make changes to a group of elements.
    23. How do you select all links within a div with the class of sidebar?
        div a {

        }
    24. What is a pseudo selector?
        Pseudo selector is a keyword added to a selector that specifies the unique state of the selected element.  
    25. What do we use the change the spacing between lines?
        <br>
    26. What do we use to change the spacing between letters?
        letter-spacing
    27. What do we use to to change everything to CAPITALS? lowercase? Capitalize?
        text-transform: uppercase;
        text-transform: lowercase;
        text-transform: capitalize;
    28. How do I add a 1px border around my div that is dotted and black?
        div {
            border-color: black;
            border: 1px;
            border-style: dotted;
        }
    29. How do I select everything on the page? 
        * {

        }
    30. How do I write a comment in CSS?
        /* insert comment here */
    31. How do I find out what file I am in, when I am using the command line? 
        pwd
    32. Using the command line - how do I see a list of files/folders in my current folder?
        ls
    33. How do I remove a file via the command line? Why do I have to be careful with this?
        rm. You have to be careful because there is no "are you sure" message before deleting. Once it's gone, it's gone forever. 
    34. Why should I use version control? 
        To keep track oh who did what in when just in case something messes up, you know when are where to fix it.
    35. How often should I commit to github?
        Whenever you finish a step.
    36. What is the command we would use to push our repo up to github? 
        git push -u origin tranequa-fauntleroy
    37. Walk me through Lambda's git flow.
        Fork it
        cd into the file
        git clone http://website.com 
        cd into new folder
        git checkout -b tranequa-fauntleroy
        code . (work on repo)
        git add .
        commit -m "add message here"
        git push -u origin tranequa-fauntleroy
        Submit PR
        Select MY branch
        New PR
        change base repo to MY forked repo
        click "create pull request"
        submit URL

Stretch Questions

    1. What is the difference between an inline element and a block element?
    2. What happens when an element is positioned absolutely? 
    3. How do I make an element take up only the amount of space it needs but also have the ability to give it a width? 
    4. Name 3 elements that are diplay block by default, 2 elements that are display inline by default and 1 element that is display inline-block by default
    5. In your own words, explain the box model. What is the "fix" for the box model, in other words, how do we make all elements respect the width we've given them? 

